# -*- coding: utf-8 -*-
"""Taller 4. Punto 2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xdk2y9LjqjsZItQyzvQXCbYhEKjdgroa
"""

import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation

plt.rcParams["animation.html"] = "jshtml"

import seaborn as sns

L = 2
Nx = 100
x = np.linspace(0, L, Nx)
dx = x[1]-x[0]
c = 0.5
dt = 0.01
C = c*dt/dx
T = 2
Nt = int(T / dt)


u_dirichlet = np.zeros((Nt, Nx))
u_neumann = np.zeros((Nt, Nx))
u_periodic = np.zeros((Nt, Nx))


u_dirichlet[0, :] = np.exp(-125 * (x - 0.5)**2)
u_neumann[0, :] = np.exp(-125 * (x - 0.5)**2)
u_periodic[0, :] = np.exp(-125 * (x - 0.5)**2)


for i in range(1, Nt - 1):
    for j in range(1, Nx - 1):
        u_dirichlet[i+1,j] =2*(1 - C**2)*u_dirichlet[i, j] + C**2*(u_dirichlet[i, j+1] + u_dirichlet[i, j-1]) - u_dirichlet[i-1, j]
        u_neumann[i+1,j] =2*(1 - C**2)*u_neumann[i, j] + C**2*(u_neumann[i, j+1] + u_neumann[i, j-1]) - u_neumann[i-1, j]
        u_periodic[i+1,j] =2*(1 - C**2)*u_periodic[i, j] + C**2*(u_periodic[i, j+1] + u_periodic[i, j-1]) - u_periodic[i-1, j]



    u_dirichlet[i+1, 0] = 0
    u_dirichlet[i+1, -1] = 0


    u_neumann[i+1, 0] = u_neumann[i+1, 1]
    u_neumann[i+1, -1] = u_neumann[i+1, -2]


    u_periodic[i+1, 0] = u_periodic[i+1, -2]
    u_periodic[i+1, -1] = u_periodic[i+1, 1]



fig, axs = plt.subplots(3, 1, figsize=(8, 8))

lines = []
titles = ['Condiciones Dirichlet','Condiciones Neumann', 'Condiciones Periodicas']
data = [u_dirichlet,u_neumann, u_periodic]

for ax, title in zip(axs, titles):
    ax.set_xlim(0, L)
    ax.set_ylim(-30, 30)
    ax.set_title(title)
    lines.append(ax.plot(x, data[0][0, :])[0])

def animate(n):
    for line, u in zip(lines, data):
        line.set_ydata(u[n, :])
    return lines


plt.tight_layout()
plt.show()

ani = animation.FuncAnimation(fig, animate, frames=Nt, interval=50, blit=True)
ani.save("Onda.gif",fps=30)

ani
